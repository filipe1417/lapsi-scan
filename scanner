#!/usr/bin/bash

###############################################################
#   TO-DO
#	
#	*. Mais opções e integrar outras ferramentas						     
#	*. Salvar IP em algum lugar para reutilização - quando se quer utilizar vários scans para o mesmo IP, não deveria precisar ficar digitando novamente 						      
#	*. Salvar em arquivos os scans		
#   *. Separar o scan completo em funções diferentes
#							      
#Versão 1.0 - Arquivo inicial do script                      
#Versão 1.1 - Separação por funções e opção de scan completo							      
#							      
###############################################################

ESC=$(printf '\033') RESET="${ESC}[0m" RED="${ESC}[31m"
GREEN="${ESC}[32m" YELLOW="${ESC}[33m" BLUE="${ESC}[34m" MAGENTA="${ESC}[35m" WHITE="${ESC}[37m" DEFAULT="${ESC}[39m"

greenprint() { printf "${GREEN}%s${RESET}\n" "$1"; }
blueprint() { printf "${BLUE}%s${RESET}\n" "$1"; }
redprint() { printf "${RED}%s${RESET}\n" "$1"; }
yellowprint() { printf "${YELLOW}%s${RESET}\n" "$1"; }
magentaprint() { printf "${MAGENTA}%s${RESET}\n" "$1"; }

VERSAO=$(\
    grep "^#Versão" $0 \
    | tail -1 \
    | cut -d "-" -f 1 \
    | cut -d " " -f 2 \
)

MENSAGEM_DE_INICIO="
$(greenprint "##########  TELA INICIAL  ##########")
$(greenprint "Versão atual: $VERSAO")

Para utilizar a ferramenta, escolha uma das seguintes opções:
$(yellowprint "1.") $(blueprint "Scan completo em toda rede - Inclui port scan")
$(yellowprint "2.") $(blueprint "Port scan em portas específicas")
$(yellowprint "3.") $(blueprint "Ping sweep em toda subrede")
$(yellowprint "4.") $(redprint "Sair do programa")
"


port_scan() {
    echo "portscan"
}


ping_sweep() {
    echo "pingsweep"
}


scan_completo() {

    tmpfile=$(mktemp /tmp/ips.XXXXXX)
    # trabalhando com file descriptors para caso de crash, o arquivo temporário ja vai ter sido apagado e o file descript é apagado também ao fechar o shell
    exec 3> "$tmpfile" # escrita - file descriptor 3
    exec 4< "$tmpfile" # leitura - file descriptor 4
    rm "$tmpfile"

    fping -g -s -a -i 1 -r 1 $1 >&3 2> /dev/null #ping sweep

    nmap -Pn $(cat <&4) #port scan

    exec 3>&- # fechar o file descriptor
}


menu_inicial(){
    echo -e "$MENSAGEM_DE_INICIO"	
    read -r opcao
    case $opcao in
        '1')
            echo -e "Digite o endereço da subrede no formato CIDR
Exemplo: 192.168.1.0/24\n"
            read -r IP
            scan_completo "$IP"
        ;;
        '2')
            echo "Digite o IP alvo"
            read -r IP
            echo "Digite a porta a ser analisada"
            read -r porta
            resultado=$(nmap $IP -p $porta | grep -v Nmap)
            if [[ $resultado == *"Host seems down"* ]];then
              echo -e "$(redprint "O host não parece estar ativo")"
            else
              echo "$resultado"
            fi
        ;;
        '3')
            echo "Digite a subrede no formato 10.0.0.0/24"
            read -r IP
            echo "O ping sweep está sendo realizado..."
            echo "Os seguintes hosts estão ativos:"
            nmap -sP $IP | grep "report" | cut -d " " -f5-
        ;;
        '4')
            #clear
            exit 0
        ;;
        *)
            echo "Opção inválida"
        ;;
    esac
}


main() {
    while true; do
        menu_inicial        
    done
}

main "$@"
